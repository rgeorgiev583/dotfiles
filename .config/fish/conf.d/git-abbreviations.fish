abbr -a -g g 'git'
abbr -a -g ga 'git add'
abbr -a -g gaa 'git add --all'
abbr -a -g gapa 'git add --patch'
abbr -a -g gau 'git add --update'
abbr -a -g gav 'git add --verbose'
abbr -a -g gap 'git apply'
abbr -a -g gb 'git branch'
abbr -a -g gba 'git branch -a'
abbr -a -g gbd 'git branch -d'
abbr -a -g gbda 'git branch --no-color --merged | command grep -vE \'^(\*|\s*(master|develop|dev)\s*$)\' | command xargs -n 1 git branch -d'
abbr -a -g gbD 'git branch -D'
abbr -a -g gbl 'git blame -b -w'
abbr -a -g gbnm 'git branch --no-merged'
abbr -a -g gbr 'git branch --remote'
abbr -a -g gbs 'git bisect'
abbr -a -g gbsb 'git bisect bad'
abbr -a -g gbsg 'git bisect good'
abbr -a -g gbsr 'git bisect reset'
abbr -a -g gbss 'git bisect start'
abbr -a -g gc 'git commit -v'
abbr -a -g gc! 'git commit -v --amend'
abbr -a -g gcn! 'git commit -v --no-edit --amend'
abbr -a -g gca 'git commit -v -a'
abbr -a -g gca! 'git commit -v -a --amend'
abbr -a -g gcan! 'git commit -v -a --no-edit --amend'
abbr -a -g gcans! 'git commit -v -a -s --no-edit --amend'
abbr -a -g gcam 'git commit -a -m'
abbr -a -g gcsm 'git commit -s -m'
abbr -a -g gcb 'git checkout -b'
abbr -a -g gcf 'git config --list'
abbr -a -g gcl 'git clone --recurse-submodules'
abbr -a -g gclean 'git clean -id'
abbr -a -g gpristine 'git reset --hard && git clean -dfx'
abbr -a -g gcm 'git checkout master'
abbr -a -g gcd 'git checkout develop'
abbr -a -g gcmsg 'git commit -m'
abbr -a -g gco 'git checkout'
abbr -a -g gcount 'git shortlog -sn'
abbr -a -g gcp 'git cherry-pick'
abbr -a -g gcpa 'git cherry-pick --abort'
abbr -a -g gcpc 'git cherry-pick --continue'
abbr -a -g gcs 'git commit -S'
abbr -a -g gd 'git diff'
abbr -a -g gdca 'git diff --cached'
abbr -a -g gdcw 'git diff --cached --word-diff'
abbr -a -g gdct 'git describe --tags `git rev-list --tags --max-count=1`'
abbr -a -g gds 'git diff --staged'
abbr -a -g gdt 'git diff-tree --no-commit-id --name-only -r'
abbr -a -g gdw 'git diff --word-diff'
abbr -a -g gf 'git fetch'
abbr -a -g gfa 'git fetch --all --prune'
abbr -a -g gfo 'git fetch origin'
abbr -a -g gg 'git gui citool'
abbr -a -g gga 'git gui citool --amend'
abbr -a -g ggpur 'ggu'
abbr -a -g ggpull 'git pull origin (git_current_branch)'
abbr -a -g ggpush 'git push origin (git_current_branch)'
abbr -a -g ggsup 'git branch --set-upstream-to=origin/(git_current_branch)'
abbr -a -g gpsup 'git push --set-upstream origin (git_current_branch)'
abbr -a -g ghh 'git help'
abbr -a -g gignore 'git update-index --assume-unchanged'
abbr -a -g gignored 'git ls-files -v | grep \'^[[:lower:]]\''
abbr -a -g git-svn-dcommit-push 'git svn dcommit && git push github master:svntrunk'
abbr -a -g gk '\gitk --all --branches'
abbr -a -g gke '\gitk --all (git log -g --pretty=%h)'
abbr -a -g gl 'git pull'
abbr -a -g glg 'git log --stat'
abbr -a -g glgp 'git log --stat -p'
abbr -a -g glgg 'git log --graph'
abbr -a -g glgga 'git log --graph --decorate --all'
abbr -a -g glgm 'git log --graph --max-count=10'
abbr -a -g glo 'git log --oneline --decorate'
abbr -a -g glol 'git log --graph --pretty=\'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\''
abbr -a -g glols 'git log --graph --pretty=\'%Cred%h%Creset -%C(auto)%d%Creset%s %Cgreen(%cr) %C(bold blue)<%an>%Creset\' --stat'
abbr -a -g glod 'git log --graph --pretty=\'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset\''
abbr -a -g glods 'git log --graph --pretty=\'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset\' --date=short'
abbr -a -g glola 'git log --graph --pretty=\'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\' --all'
abbr -a -g glog 'git log --oneline --decorate --graph'
abbr -a -g gloga 'git log --oneline --decorate --graph --all'
abbr -a -g glp '_git_log_prettily'
abbr -a -g gm 'git merge'
abbr -a -g gmom 'git merge origin/master'
abbr -a -g gmt 'git mergetool --no-prompt'
abbr -a -g gmtvim 'git mergetool --no-prompt --tool=vimdiff'
abbr -a -g gmum 'git merge upstream/master'
abbr -a -g gma 'git merge --abort'
abbr -a -g gp 'git push'
abbr -a -g gpd 'git push --dry-run'
abbr -a -g gpf 'git push --force-with-lease'
abbr -a -g gpf! 'git push --force'
abbr -a -g gpoat 'git push origin --all && git push origin --tags'
abbr -a -g gpu 'git push upstream'
abbr -a -g gpv 'git push -v'
abbr -a -g gr 'git remote'
abbr -a -g gra 'git remote add'
abbr -a -g grb 'git rebase'
abbr -a -g grba 'git rebase --abort'
abbr -a -g grbc 'git rebase --continue'
abbr -a -g grbd 'git rebase develop'
abbr -a -g grbi 'git rebase -i'
abbr -a -g grbm 'git rebase master'
abbr -a -g grbs 'git rebase --skip'
abbr -a -g grh 'git reset'
abbr -a -g grhh 'git reset --hard'
abbr -a -g groh 'git reset origin/(git_current_branch) --hard'
abbr -a -g grm 'git rm'
abbr -a -g grmc 'git rm --cached'
abbr -a -g grmv 'git remote rename'
abbr -a -g grrm 'git remote remove'
abbr -a -g grset 'git remote set-url'
abbr -a -g grt 'cd (git rev-parse --show-toplevel || echo .)'
abbr -a -g gru 'git reset --'
abbr -a -g grup 'git remote update'
abbr -a -g grv 'git remote -v'
abbr -a -g gsb 'git status -sb'
abbr -a -g gsd 'git svn dcommit'
abbr -a -g gsh 'git show'
abbr -a -g gsi 'git submodule init'
abbr -a -g gsps 'git show --pretty=short --show-signature'
abbr -a -g gsr 'git svn rebase'
abbr -a -g gss 'git status -s'
abbr -a -g gst 'git status'
abbr -a -g gstaa 'git stash apply'
abbr -a -g gstc 'git stash clear'
abbr -a -g gstd 'git stash drop'
abbr -a -g gstl 'git stash list'
abbr -a -g gstp 'git stash pop'
abbr -a -g gsts 'git stash show --text'
abbr -a -g gstall 'git stash --all'
abbr -a -g gsu 'git submodule update'
abbr -a -g gts 'git tag -s'
abbr -a -g gtv 'git tag | sort -V'
abbr -a -g gtl 'gtl(){ git tag --sort=-v:refname -n -l $1* }; noglob gtl'
abbr -a -g gunignore 'git update-index --no-assume-unchanged'
abbr -a -g gunwip 'git log -n 1 | grep -q -c \'\-\-wip\-\-\' && git reset HEAD~1'
abbr -a -g gup 'git pull --rebase'
abbr -a -g gupv 'git pull --rebase -v'
abbr -a -g gupa 'git pull --rebase --autostash'
abbr -a -g gupav 'git pull --rebase --autostash -v'
abbr -a -g glum 'git pull upstream master'
abbr -a -g gwch 'git whatchanged -p --abbrev-commit --pretty=medium'
abbr -a -g gwip 'git add -A; git rm (git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m \'--wip-- [skip ci]\''
